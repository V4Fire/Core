{
  "parser": "babel-eslint",

  "parserOptions": {
    "sourceType": "module"
  },

  "env": {
    "browser": true,
    "es6": true,
    "es2017": true
  },

  "plugins": [
    "@typescript-eslint",
    "enchanted-curly",
    "import"
  ],

  "rules": {
    // ES spec ESLint rules
    "strict": ["error", "global"],

    "no-with": "error",
    "no-caller": "error",
    "no-delete-var": "error",
    "no-proto": "off",

    // Disable JS bad parts

    "use-isnan": "error",
    "valid-typeof": "error",
    "no-undef": "off",

    "no-eq-null": "off",
    "eqeqeq": ["error", "always", {"null": "never"}],
    "no-compare-neg-zero": "error",

    "no-obj-calls": "error",
    "no-sparse-arrays": "error",

    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-symbol": "error",
    "no-new-wrappers": "error",
    "no-array-constructor": "error",
    "new-parens": "error",

    "no-dupe-keys": "error",
    "no-dupe-args": "error",

    "no-extend-native": "off",
    "no-global-assign": "error",
    "no-implicit-globals": "error",
    "no-implicit-coercion": "error",

    "no-restricted-globals": [
      "error",

      {
        "name": "window",
        "message": "Use globalThis parameter instead."
      },

      {
        "name": "global",
        "message": "Use globalThis parameter instead."
      }
    ],

    "no-void": ["error", {"allowAsStatement": true}],
    "no-eval": "error",
    "no-script-url": "off",

    // Variables

    "one-var": "off",
    "one-var-declaration-per-line": "error",
    "vars-on-top": "error",

    "no-var": "error",
    "block-scoped-var": "error",
    "no-inner-declarations": "error",

    "prefer-const": ["error", {"destructuring": "all"}],

    // Assignment rules

    "no-cond-assign": ["error", "except-parens"],

    "no-multi-assign": "error",
    "no-return-assign": "off",

    "no-ex-assign": "error",
    "no-param-reassign": "off",

    "no-import-assign": "error",
    "no-func-assign": "error",
    "no-class-assign": "error",
    "no-const-assign": "error",

    "no-self-assign": "error",
    "operator-assignment": "error",

    // Redeclare

    "no-redeclare": "error",
    "no-shadow": "off",
    "no-shadow-restricted-names": "error",

    // Condition rules

    "no-constant-condition": "warn",
    "no-extra-boolean-cast": "error",
    "yoda": "error",

    "no-lonely-if": "warn",
    "no-negated-condition": "off",
    "no-dupe-else-if": "warn",
    "no-else-return": ["error", {"allowElseIf": false}],

    "no-fallthrough": "error",
    "no-duplicate-case": "error",
    "default-case": "warn",
    "default-case-last": "error",
    "no-case-declarations": "error",

    "no-self-compare": "error",
    "no-unsafe-negation": "error",

    // Ternary

    "no-ternary": "off",
    "no-nested-ternary": "error",
    "no-unneeded-ternary": "error",
    "multiline-ternary": ["error", "always-multiline"],

    // RegExp-s

    "no-invalid-regexp": "error",
    "no-control-regex": "warn",
    "require-unicode-regexp": "off",

    "prefer-regex-literals": "error",
    "prefer-named-capture-group": "off",
    "wrap-regex": "off",

    "no-misleading-character-class": "warn",
    "no-empty-character-class": "error",
    "no-div-regex": "off",

    "no-regex-spaces": "warn",
    "no-irregular-whitespace": ["error", {"skipStrings": true, "skipTemplates": true}],

    // Dead code

    "no-lone-blocks": "error",
    "no-useless-return": "error",
    "no-useless-catch": "error",
    "no-unused-labels": "error",

    "no-extra-bind": "error",
    "no-useless-call": "error",

    "no-useless-computed-key": ["error", {
      "enforceForClassMembers": true
    }],

    "no-empty": ["warn", {"allowEmptyCatch": true}],
    "no-empty-pattern": "error",
    "no-unreachable": "warn",

    "no-useless-concat": "error",
    "no-useless-backreference": "error",
    "no-useless-escape": "error",

    // Async

    "no-await-in-loop": "off",
    "no-async-promise-executor": "off",
    "require-atomic-updates": "warn",
    "prefer-promise-reject-errors": "off",
    "require-await": "error",
    "no-return-await": "error",

    // Modern syntax

    "prefer-exponentiation-operator": "error",
    "prefer-numeric-literals": "error",
    "prefer-template": "error",

    "object-shorthand": "error",
    "prefer-object-spread": "error",

    "prefer-rest-params": "warn",
    "prefer-spread": "warn",

    "prefer-destructuring": ["error", {
      "VariableDeclarator": {
        "array": false,
        "object": true
      }
    }],

    "prefer-arrow-callback": ["error", {
      "allowNamedFunctions": true,
      "allowUnboundThis": true
    }],

    // Accessors

    "no-setter-return": "error",
    "getter-return": ["error", {"allowImplicit": false}],
    "accessor-pairs": ["error", {
      "setWithoutGet": true,
      "getWithoutSet": false,
      "enforceForClassMembers": false
    }],

    // Loops

    "for-direction": "off",
    "guard-for-in": "warn",

    "no-loop-func": "off",
    "no-unmodified-loop-condition": "error",

    "no-iterator": "warn",
    "no-continue": "off",

    // Line breaks

    "unicode-bom": "error",
    "eol-last": "error",

    "linebreak-style": "error",
    "no-multiple-empty-lines": ["error", {"max": 1}],

    "operator-linebreak": ["error", "after"],
    "no-unexpected-multiline": "error",

    "padded-blocks": "off",
    "padding-line-between-statements": [
      "error",
      {"blankLine": "always", "prev": "block-like", "next": "*"},
      {"blankLine": "always", "prev": "class", "next": "*"},
      {"blankLine": "always", "prev": "function", "next": "*"},
      {"blankLine": "always", "prev": "iife", "next": "*"},
      {"blankLine": "always", "prev": "multiline-block-like", "next": "*"},
      {"blankLine": "always", "prev": "multiline-expression", "next": "*"},
      {"blankLine": "always", "prev": "directive", "next": "*"},
      {"blankLine": "always", "prev": "import", "next": "export"},
      {"blankLine": "always", "prev": "cjs-import", "next": "cjs-export"}
    ],

    // Spaces

    "no-mixed-spaces-and-tabs": ["error", "smart-tabs"],
    "no-tabs": ["error", {"allowIndentationTabs": true}],

    "semi-spacing": "error",
    "semi-style": "error",

    "no-multi-spaces": "error",
    "no-trailing-spaces": "error",

    "space-infix-ops": "error",
    "space-unary-ops": "error",

    "space-in-parens": "error",
    "space-before-blocks": "error",
    "no-whitespace-before-property": "error",

    "keyword-spacing": "off",

    "rest-spread-spacing": "error",
    "yield-star-spacing": ["error", "after"],
    "generator-star-spacing": ["error", {
      "before": false,
      "after": true,
      "method": {"before": false, "after": false}
    }],

    "array-bracket-newline": "error",
    "array-bracket-spacing": "error",
    "array-element-newline": ["error", "consistent"],

    "block-spacing": "error",
    "nonblock-statement-body-position": "error",

    "key-spacing": "error",
    "switch-colon-spacing": "error",
    "computed-property-spacing": "error",

    "object-curly-spacing": "off",
    "object-curly-newline": ["error", {"consistent": true}],
    "object-property-newline": ["error", {"allowAllPropertiesOnSameLine": true}],

    "enchanted-curly/object-curly-spacing": ["error", "never", {
      "multiline": true,
      "import": true,
      "export": true
    }],

    // Numbers

    "no-octal": "error",
    "no-loss-of-precision": "warn",
    "no-floating-decimal": "error",
    "radix": "error",

    // Strings

    "no-multi-str": "error",
    "no-template-curly-in-string": "warn",
    "no-octal-escape": "error",

    "template-tag-spacing": "error",
    "template-curly-spacing": "error",

    // Documentation

    "symbol-description": "warn",

    // Labels

    "no-labels": ["error", {"allowLoop": true}],
    "no-label-var": "off",
    "no-extra-label": "error",

    // Imports

    "no-duplicate-imports": "error",
    "no-useless-rename": "off",

    // Functions

    "func-names": ["error", "as-needed"],
    "func-name-matching": "error",
    "func-style": ["error", "declaration", {"allowArrowFunctions": true}],

    "wrap-iife": "error",
    "newline-per-chained-call": ["error", {"ignoreChainWithDepth": 3}],
    "function-call-argument-newline": ["error", "consistent"],
    "function-paren-newline": ["error", "consistent"],

    "func-call-spacing": "error",
    "space-before-function-paren": ["error", {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }],

    "no-invalid-this": "off",
    "consistent-this": ["error", "self", "that"],

    "default-param-last": "error",

    "arrow-parens": "error",
    "arrow-spacing": "error",
    "arrow-body-style": "error",

    "array-callback-return": "error",
    "no-confusing-arrow": "off",

    "implicit-arrow-linebreak": "error",

    // Classes

    "no-this-before-super": "error",
    "constructor-super": "error",

    "class-methods-use-this": "off",
    "no-constructor-return": "off",

    "no-useless-constructor": "error",
    "no-dupe-class-members": "error",

    "dot-notation": "off",
    "dot-location": ["error", "property"],

    "lines-between-class-members": "error",

    // Comments

    "no-warning-comments": "off",
    "no-inline-comments": "error",
    "multiline-comment-style": "off",

    "line-comment-position": ["error", "above"],
    "lines-around-comment": "off",

    "spaced-comment": ["error", "always", {
      "line": {
        "exceptions": ["-"],
        "markers": [
          "/",
          "#set",
          "#if",
          "#endif",
          "#unless",
          "#endunless",
          "#include",
          "#without"
        ]
      },

      "block": {
        "markers": ["!"],
        "exceptions": ["*"],
        "balanced": true
      }
    }],

    "capitalized-comments": ["error", "always", {
      "ignorePattern": "#",
      "ignoreConsecutiveComments": true
    }],

    // Naming

    "camelcase": "error",

    "no-underscore-dangle": "off",

    "new-cap": ["error", {
      "newIsCap": true,
      "capIsNew": false,
      "newIsCapExceptionPattern": "^[bpg][A-Z]"
    }],

    // Unsafe

    "no-undef-init": "off",
    "no-use-before-define": ["error", {"functions": false}],
    "no-unsafe-finally": "error",

    // Debug

    "no-console": "off",
    "no-alert": "warn",
    "no-debugger": "warn",

    // Best practices

    "no-magic-numbers": "off",
    "no-sequences": "error",

    "no-prototype-builtins": "off",
    "no-mixed-operators": "off",

    "curly": "error",

    "require-yield": "error",
    "consistent-return": "off",

    "no-bitwise": "error",
    "no-plusplus": "off",

    "no-unused-expressions": ["error", {"allowShortCircuit": true}],

    "no-unused-vars": ["error", {
      "vars": "all",
      "args": "after-used"
    }],

    // Style

    "semi": "error",
    "no-extra-semi": "error",

    "brace-style": "error",

    "no-empty-function": "error",

    "comma-dangle": "error",
    "comma-style": "error",
    "comma-spacing": "error",

    "quotes": ["error", "single", {"avoidEscape":  true}],
    "quote-props": ["error", "as-needed", {"keywords": false, "numbers": false}],
    "jsx-quotes": "error",

    "no-extra-parens": ["error", "all", {
      "conditionalAssign": true,
      "nestedBinaryExpressions": true,
      "ignoreJSX": "all",
      "enforceForSequenceExpressions": true,
      "enforceForNewInMemberExpressions": true
    }],

    "init-declarations": "off",

    // Other

    "sort-keys": "off",
    "sort-vars": "off",
    "sort-imports": "off",

    "id-blacklist": "off",
    "id-length": "off",
    "id-match": "off",

    // Code metrics

    "complexity": ["error", {"max": 50}],

    "max-params": "off",
    "max-statements": "off",
    "max-classes-per-file": "off",

    "max-depth": ["warn", {"max": 10}],
    "max-nested-callbacks": ["warn", {"max": 10}],

    "max-lines-per-function": ["warn", {
      "max": 400,
      "skipComments": true
    }],

    "max-lines": ["error", {
      "max": 800,
      "skipComments": true
    }],

    "max-len": ["error", {
      "code": 120,
      "tabWidth": 2,
      "ignoreUrls": true,
      "ignoreRegExpLiterals": true,
      "ignoreStrings": true,
      "ignoreTemplateLiterals": true
    }],

    // [Import]

    "import/no-unresolved": "off",
    "import/no-cycle": "warn",

    "import/no-absolute-path": "error",
    "import/no-relative-parent-imports": "error",
    "import/no-extraneous-dependencies": "off",
    "import/no-useless-path-segments": "error",
    "import/no-self-import": "error",
    "import/no-internal-modules": "off",
    "import/no-nodejs-modules": "warn",

    "import/no-commonjs": "off",
    "import/no-dynamic-require": "off",
    "import/no-webpack-loader-syntax": "off",
    "import/no-amd": "error",

    "import/named": "error",
    "import/default": "error",
    "import/namespace": "error",
    "import/no-unassigned-import": "off",

    "import/export": "error",
    "import/no-mutable-exports": "warn",
    "import/no-named-export": "off",
    "import/group-exports": "off",

    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-named-default": "error",

    "import/no-anonymous-default-export": ["error", {
      "allowArray": true,
      "allowArrowFunction": true,
      "allowAnonymousClass": true,
      "allowAnonymousFunction": true,
      "allowCallExpression": true,
      "allowLiteral": true,
      "allowObject": true
    }],

    "import/no-deprecated": "warn",
    "import/no-unused-modules": "warn",
    "import/unambiguous": "off",

    "import/first": "error",
    "import/newline-after-import": "error",
    "import/exports-last": "off",

    "import/order": "warn",
    "import/prefer-default-export": "off",

    "import/no-duplicates": "error",
    "import/no-namespace": "off",
    "import/max-dependencies": "off",

    "import/extensions": ["error", {
      "js": "never",
      "jsx": "never",
      "ts": "never",
      "tsx": "never"
    }]
  },

  "overrides": [
    {
      "files": [
        "./*.js",
        "./build/**/*.js",
        "./config/**/*.js"
      ],

      "parserOptions": {
        "sourceType": "script"
      },

      "env": {
        "node": true,
        "es6": true,
        "es2017": true
      },

      "rules": {
        "import/no-nodejs-modules": "off",
        "import/order": "off"
      }
    },

    {
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",

      "parserOptions": {
        "project": "tsconfig.json",
        "tsconfigRootDir": ".",
        "sourceType": "module"
      },

      "rules": {
        // [TSLint]

        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-type-alias": "off",

        "@typescript-eslint/no-unnecessary-type-arguments": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",

        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-extra-non-null-assertion": "error",

        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",

        "@typescript-eslint/no-inferrable-types": ["error", {
          "ignoreParameters": true,
          "ignoreProperties": true
        }],

        "@typescript-eslint/array-type": ["error", {
          "default": "array-simple"
        }],

        "@typescript-eslint/consistent-type-assertions": ["error", {
          "assertionStyle": "angle-bracket",
          "objectLiteralTypeAssertions": "allow"
        }],

        "@typescript-eslint/empty-interface": "off",
        "@typescript-eslint/method-signature-style": ["error", "method"],
        "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
        "@typescript-eslint/member-delimiter-style": "error",

        "@typescript-eslint/prefer-function-type": "off",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/unified-signatures": "warn",

        "@typescript-eslint/typedef": ["error", {
          "parameter": true,
          "arrowParameter": false,
          "propertyDeclaration": true,
          "memberVariableDeclaration": true,
          "variableDeclaration": false,
          "variableDeclarationIgnoreFunction": true,
          "arrayDestructuring": false,
          "objectDestructuring": false
        }],

        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": ["error", {
          "allowArgumentsExplicitlyTypedAsAny": true,
          "allowHigherOrderFunctions": true
        }],

        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/class-literal-property-style": "off",
        "@typescript-eslint/no-extraneous-class": "error",
        "@typescript-eslint/no-parameter-properties": "error",
        "@typescript-eslint/unbound-method": ["warn", {
          "ignoreStatic": true
        }],

        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",

        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/no-require-imports": "off",
        "@typescript-eslint/no-var-requires": "error",

        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-for-of": "off",
        "@typescript-eslint/no-for-in-array": "off",

        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/require-array-sort-compare": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-regexp-exec": "warn",

        "@typescript-eslint/no-base-to-string": "off",
        "@typescript-eslint/no-dynamic-delete": "off",
        "@typescript-eslint/no-implied-eval": "off",

        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/restrict-template-expressions": ["error", {
          "allowNumber": true,
          "allowBoolean": true,
          "allowNullish": true,
          "allowAny": true
        }],

        "@typescript-eslint/switch-exhaustiveness-check": "warn",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "off",
        "@typescript-eslint/strict-boolean-expressions": ["error", {
          "allowString": false,
          "allowNumber": false,
          "allowNullableBoolean": true
        }],

        "@typescript-eslint/no-floating-promises": ["warn", {"ignoreIIFE": true}],
        "@typescript-eslint/promise-function-async": "off",

        "@typescript-eslint/no-unnecessary-condition": ["error", {
          "allowConstantLoopConditions": true
        }],

        "@typescript-eslint/no-throw-literal": "off",

        "@typescript-eslint/ban-ts-comment": ["error", {
          "ts-ignore": "allow-with-description",
          "ts-expect-error": "allow-with-description",
          "minimumDescriptionLength": 4
        }],

        "@typescript-eslint/prefer-ts-expect-error": "off",
        "@typescript-eslint/ban-types": ["error", {
          "extendDefaults": false,
          "types": {
            "String": {
              "message": "Use string instead",
              "fixWith": "string"
            },

            "Number": {
              "message": "Use number instead",
              "fixWith": "number"
            },

            "Boolean": {
              "message": "Use boolean instead",
              "fixWith": "boolean"
            },

            "Symbol": {
              "message": "Use symbol instead",
              "fixWith": "symbol"
            }
          }
        }],

        "@typescript-eslint/member-ordering": ["error", {
          "default": [
            "signature",

            "public-static-field",
            "public-static-method",

            "protected-static-field",
            "protected-static-method",

            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",

            "public-constructor",
            "protected-constructor",

            "public-instance-method",
            "protected-instance-method",

            "private-static-field",
            "private-static-method",

            "private-constructor",
            "private-instance-method"
          ]
        }],

        // [TSLint & ESLint]

        "brace-style": "off",
        "@typescript-eslint/brace-style": "error",

        "comma-spacing": "off",
        "@typescript-eslint/comma-spacing": "error",

        "default-param-last": "off",
        "@typescript-eslint/default-param-last": "error",

        "dot-notation": "off",
        "@typescript-eslint/dot-notation": "off",

        "func-call-spacing": "off",
        "@typescript-eslint/func-call-spacing": "error",

        "init-declarations": "off",
        "@typescript-eslint/init-declarations": "off",

        "keyword-spacing": "off",
        "@typescript-eslint/keyword-spacing": "off",

        "lines-between-class-members": "off",
        "@typescript-eslint/lines-between-class-members": ["error", {"exceptAfterSingleLine": true}],

        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": "error",

        "no-dupe-class-members": "off",
        "@typescript-eslint/no-dupe-class-members": "error",

        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "error",

        "no-extra-parens": "off",
        "@typescript-eslint/no-extra-parens": ["error", "all", {
          "conditionalAssign": true,
          "nestedBinaryExpressions": true,
          "ignoreJSX": "all",
          "enforceForSequenceExpressions": true,
          "enforceForNewInMemberExpressions": true
        }],

        "semi": "off",
        "@typescript-eslint/semi": "error",

        "no-extra-semi": "off",
        "@typescript-eslint/no-extra-semi": "error",

        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": "error",

        "no-magic-numbers": "off",
        "@typescript-eslint/no-magic-numbers": "off",

        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": ["error", {"allowShortCircuit": true}],

        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars-experimental": ["error", {
          "ignoreArgsIfArgsAfterAreUsed": true
        }],

        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error",

        "quotes": "off",
        "@typescript-eslint/quotes": ["error", "single", {"avoidEscape":  true}],

        "require-await": "off",
        "@typescript-eslint/require-await": "error",

        "no-return-await": "off",
        "@typescript-eslint/return-await": ["error", "in-try-catch"],

        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": ["error", {
          "anonymous": "always",
          "named": "never",
          "asyncArrow": "always"
        }],

        "consistent-this": "off",
        "@typescript-eslint/no-this-alias": ["error", {
          "allowDestructuring": true,
          "allowedNames": ["self", "that"]
        }]
      }
    }
  ]
}
